"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkExceptions = exports.WaiterState = exports.waiterServiceDefaults = void 0;
/**
 * @private
 */
exports.waiterServiceDefaults = {
    minDelay: 2,
    maxDelay: 120,
};
var WaiterState;
(function (WaiterState) {
    WaiterState["ABORTED"] = "ABORTED";
    WaiterState["FAILURE"] = "FAILURE";
    WaiterState["SUCCESS"] = "SUCCESS";
    WaiterState["RETRY"] = "RETRY";
    WaiterState["TIMEOUT"] = "TIMEOUT";
})(WaiterState = exports.WaiterState || (exports.WaiterState = {}));
/**
 * Handles and throws exceptions resulting from the waiterResult
 * @param result WaiterResult
 */
const checkExceptions = (result) => {
    if (result.state === WaiterState.ABORTED) {
        const abortError = new Error(`${JSON.stringify({
            ...result,
            reason: "Request was aborted",
        })}`);
        abortError.name = "AbortError";
        throw abortError;
    }
    else if (result.state === WaiterState.TIMEOUT) {
        const timeoutError = new Error(`${JSON.stringify({
            ...result,
            reason: "Waiter has timed out",
        })}`);
        timeoutError.name = "TimeoutError";
        throw timeoutError;
    }
    else if (result.state !== WaiterState.SUCCESS) {
        throw new Error(`${JSON.stringify({ result })}`);
    }
    return result;
};
exports.checkExceptions = checkExceptions;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3dhaXRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFJQTs7R0FFRztBQUNVLFFBQUEscUJBQXFCLEdBQUc7SUFDbkMsUUFBUSxFQUFFLENBQUM7SUFDWCxRQUFRLEVBQUUsR0FBRztDQUNkLENBQUM7QUFRRixJQUFZLFdBTVg7QUFORCxXQUFZLFdBQVc7SUFDckIsa0NBQW1CLENBQUE7SUFDbkIsa0NBQW1CLENBQUE7SUFDbkIsa0NBQW1CLENBQUE7SUFDbkIsOEJBQWUsQ0FBQTtJQUNmLGtDQUFtQixDQUFBO0FBQ3JCLENBQUMsRUFOVyxXQUFXLEdBQVgsbUJBQVcsS0FBWCxtQkFBVyxRQU10QjtBQVdEOzs7R0FHRztBQUNJLE1BQU0sZUFBZSxHQUFHLENBQUMsTUFBb0IsRUFBZ0IsRUFBRTtJQUNwRSxJQUFJLE1BQU0sQ0FBQyxLQUFLLEtBQUssV0FBVyxDQUFDLE9BQU8sRUFBRTtRQUN4QyxNQUFNLFVBQVUsR0FBRyxJQUFJLEtBQUssQ0FDMUIsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO1lBQ2hCLEdBQUcsTUFBTTtZQUNULE1BQU0sRUFBRSxxQkFBcUI7U0FDOUIsQ0FBQyxFQUFFLENBQ0wsQ0FBQztRQUNGLFVBQVUsQ0FBQyxJQUFJLEdBQUcsWUFBWSxDQUFDO1FBQy9CLE1BQU0sVUFBVSxDQUFDO0tBQ2xCO1NBQU0sSUFBSSxNQUFNLENBQUMsS0FBSyxLQUFLLFdBQVcsQ0FBQyxPQUFPLEVBQUU7UUFDL0MsTUFBTSxZQUFZLEdBQUcsSUFBSSxLQUFLLENBQzVCLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUNoQixHQUFHLE1BQU07WUFDVCxNQUFNLEVBQUUsc0JBQXNCO1NBQy9CLENBQUMsRUFBRSxDQUNMLENBQUM7UUFDRixZQUFZLENBQUMsSUFBSSxHQUFHLGNBQWMsQ0FBQztRQUNuQyxNQUFNLFlBQVksQ0FBQztLQUNwQjtTQUFNLElBQUksTUFBTSxDQUFDLEtBQUssS0FBSyxXQUFXLENBQUMsT0FBTyxFQUFFO1FBQy9DLE1BQU0sSUFBSSxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDbEQ7SUFDRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDLENBQUM7QUF2QlcsUUFBQSxlQUFlLG1CQXVCMUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXYWl0ZXJDb25maWd1cmF0aW9uIGFzIFdhaXRlckNvbmZpZ3VyYXRpb25fXyB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFdhaXRlckNvbmZpZ3VyYXRpb248VD4gZXh0ZW5kcyBXYWl0ZXJDb25maWd1cmF0aW9uX188VD4ge31cblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgY29uc3Qgd2FpdGVyU2VydmljZURlZmF1bHRzID0ge1xuICBtaW5EZWxheTogMixcbiAgbWF4RGVsYXk6IDEyMCxcbn07XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IHR5cGUgV2FpdGVyT3B0aW9uczxDbGllbnQ+ID0gV2FpdGVyQ29uZmlndXJhdGlvbjxDbGllbnQ+ICZcbiAgUmVxdWlyZWQ8UGljazxXYWl0ZXJDb25maWd1cmF0aW9uPENsaWVudD4sIFwibWluRGVsYXlcIiB8IFwibWF4RGVsYXlcIj4+O1xuXG5leHBvcnQgZW51bSBXYWl0ZXJTdGF0ZSB7XG4gIEFCT1JURUQgPSBcIkFCT1JURURcIixcbiAgRkFJTFVSRSA9IFwiRkFJTFVSRVwiLFxuICBTVUNDRVNTID0gXCJTVUNDRVNTXCIsXG4gIFJFVFJZID0gXCJSRVRSWVwiLFxuICBUSU1FT1VUID0gXCJUSU1FT1VUXCIsXG59XG5cbmV4cG9ydCB0eXBlIFdhaXRlclJlc3VsdCA9IHtcbiAgc3RhdGU6IFdhaXRlclN0YXRlO1xuXG4gIC8qKlxuICAgKiAob3B0aW9uYWwpIEluZGljYXRlcyBhIHJlYXNvbiBmb3Igd2h5IGEgd2FpdGVyIGhhcyByZWFjaGVkIGl0cyBzdGF0ZS5cbiAgICovXG4gIHJlYXNvbj86IGFueTtcbn07XG5cbi8qKlxuICogSGFuZGxlcyBhbmQgdGhyb3dzIGV4Y2VwdGlvbnMgcmVzdWx0aW5nIGZyb20gdGhlIHdhaXRlclJlc3VsdFxuICogQHBhcmFtIHJlc3VsdCBXYWl0ZXJSZXN1bHRcbiAqL1xuZXhwb3J0IGNvbnN0IGNoZWNrRXhjZXB0aW9ucyA9IChyZXN1bHQ6IFdhaXRlclJlc3VsdCk6IFdhaXRlclJlc3VsdCA9PiB7XG4gIGlmIChyZXN1bHQuc3RhdGUgPT09IFdhaXRlclN0YXRlLkFCT1JURUQpIHtcbiAgICBjb25zdCBhYm9ydEVycm9yID0gbmV3IEVycm9yKFxuICAgICAgYCR7SlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAuLi5yZXN1bHQsXG4gICAgICAgIHJlYXNvbjogXCJSZXF1ZXN0IHdhcyBhYm9ydGVkXCIsXG4gICAgICB9KX1gXG4gICAgKTtcbiAgICBhYm9ydEVycm9yLm5hbWUgPSBcIkFib3J0RXJyb3JcIjtcbiAgICB0aHJvdyBhYm9ydEVycm9yO1xuICB9IGVsc2UgaWYgKHJlc3VsdC5zdGF0ZSA9PT0gV2FpdGVyU3RhdGUuVElNRU9VVCkge1xuICAgIGNvbnN0IHRpbWVvdXRFcnJvciA9IG5ldyBFcnJvcihcbiAgICAgIGAke0pTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgLi4ucmVzdWx0LFxuICAgICAgICByZWFzb246IFwiV2FpdGVyIGhhcyB0aW1lZCBvdXRcIixcbiAgICAgIH0pfWBcbiAgICApO1xuICAgIHRpbWVvdXRFcnJvci5uYW1lID0gXCJUaW1lb3V0RXJyb3JcIjtcbiAgICB0aHJvdyB0aW1lb3V0RXJyb3I7XG4gIH0gZWxzZSBpZiAocmVzdWx0LnN0YXRlICE9PSBXYWl0ZXJTdGF0ZS5TVUNDRVNTKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke0pTT04uc3RyaW5naWZ5KHsgcmVzdWx0IH0pfWApO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIl19