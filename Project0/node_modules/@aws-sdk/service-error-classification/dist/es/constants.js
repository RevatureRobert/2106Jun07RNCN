/**
 * Errors encountered when the client clock and server clock cannot agree on the
 * current time.
 *
 * These errors are retryable, assuming the SDK has enabled clock skew
 * correction.
 */
export var CLOCK_SKEW_ERROR_CODES = [
    "AuthFailure",
    "InvalidSignatureException",
    "RequestExpired",
    "RequestInTheFuture",
    "RequestTimeTooSkewed",
    "SignatureDoesNotMatch",
];
/**
 * Errors that indicate the SDK is being throttled.
 *
 * These errors are always retryable.
 */
export var THROTTLING_ERROR_CODES = [
    "BandwidthLimitExceeded",
    "EC2ThrottledException",
    "LimitExceededException",
    "PriorRequestNotComplete",
    "ProvisionedThroughputExceededException",
    "RequestLimitExceeded",
    "RequestThrottled",
    "RequestThrottledException",
    "SlowDown",
    "ThrottledException",
    "Throttling",
    "ThrottlingException",
    "TooManyRequestsException",
    "TransactionInProgressException", // DynamoDB
];
/**
 * Error codes that indicate transient issues
 */
export var TRANSIENT_ERROR_CODES = ["AbortError", "TimeoutError", "RequestTimeout", "RequestTimeoutException"];
/**
 * Error codes that indicate transient issues
 */
export var TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFDSCxNQUFNLENBQUMsSUFBTSxzQkFBc0IsR0FBRztJQUNwQyxhQUFhO0lBQ2IsMkJBQTJCO0lBQzNCLGdCQUFnQjtJQUNoQixvQkFBb0I7SUFDcEIsc0JBQXNCO0lBQ3RCLHVCQUF1QjtDQUN4QixDQUFDO0FBRUY7Ozs7R0FJRztBQUNILE1BQU0sQ0FBQyxJQUFNLHNCQUFzQixHQUFHO0lBQ3BDLHdCQUF3QjtJQUN4Qix1QkFBdUI7SUFDdkIsd0JBQXdCO0lBQ3hCLHlCQUF5QjtJQUN6Qix3Q0FBd0M7SUFDeEMsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQiwyQkFBMkI7SUFDM0IsVUFBVTtJQUNWLG9CQUFvQjtJQUNwQixZQUFZO0lBQ1oscUJBQXFCO0lBQ3JCLDBCQUEwQjtJQUMxQixnQ0FBZ0MsRUFBRSxXQUFXO0NBQzlDLENBQUM7QUFFRjs7R0FFRztBQUNILE1BQU0sQ0FBQyxJQUFNLHFCQUFxQixHQUFHLENBQUMsWUFBWSxFQUFFLGNBQWMsRUFBRSxnQkFBZ0IsRUFBRSx5QkFBeUIsQ0FBQyxDQUFDO0FBRWpIOztHQUVHO0FBQ0gsTUFBTSxDQUFDLElBQU0sNEJBQTRCLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXJyb3JzIGVuY291bnRlcmVkIHdoZW4gdGhlIGNsaWVudCBjbG9jayBhbmQgc2VydmVyIGNsb2NrIGNhbm5vdCBhZ3JlZSBvbiB0aGVcbiAqIGN1cnJlbnQgdGltZS5cbiAqXG4gKiBUaGVzZSBlcnJvcnMgYXJlIHJldHJ5YWJsZSwgYXNzdW1pbmcgdGhlIFNESyBoYXMgZW5hYmxlZCBjbG9jayBza2V3XG4gKiBjb3JyZWN0aW9uLlxuICovXG5leHBvcnQgY29uc3QgQ0xPQ0tfU0tFV19FUlJPUl9DT0RFUyA9IFtcbiAgXCJBdXRoRmFpbHVyZVwiLFxuICBcIkludmFsaWRTaWduYXR1cmVFeGNlcHRpb25cIixcbiAgXCJSZXF1ZXN0RXhwaXJlZFwiLFxuICBcIlJlcXVlc3RJblRoZUZ1dHVyZVwiLFxuICBcIlJlcXVlc3RUaW1lVG9vU2tld2VkXCIsXG4gIFwiU2lnbmF0dXJlRG9lc05vdE1hdGNoXCIsXG5dO1xuXG4vKipcbiAqIEVycm9ycyB0aGF0IGluZGljYXRlIHRoZSBTREsgaXMgYmVpbmcgdGhyb3R0bGVkLlxuICpcbiAqIFRoZXNlIGVycm9ycyBhcmUgYWx3YXlzIHJldHJ5YWJsZS5cbiAqL1xuZXhwb3J0IGNvbnN0IFRIUk9UVExJTkdfRVJST1JfQ09ERVMgPSBbXG4gIFwiQmFuZHdpZHRoTGltaXRFeGNlZWRlZFwiLFxuICBcIkVDMlRocm90dGxlZEV4Y2VwdGlvblwiLFxuICBcIkxpbWl0RXhjZWVkZWRFeGNlcHRpb25cIixcbiAgXCJQcmlvclJlcXVlc3ROb3RDb21wbGV0ZVwiLFxuICBcIlByb3Zpc2lvbmVkVGhyb3VnaHB1dEV4Y2VlZGVkRXhjZXB0aW9uXCIsXG4gIFwiUmVxdWVzdExpbWl0RXhjZWVkZWRcIixcbiAgXCJSZXF1ZXN0VGhyb3R0bGVkXCIsXG4gIFwiUmVxdWVzdFRocm90dGxlZEV4Y2VwdGlvblwiLFxuICBcIlNsb3dEb3duXCIsXG4gIFwiVGhyb3R0bGVkRXhjZXB0aW9uXCIsXG4gIFwiVGhyb3R0bGluZ1wiLFxuICBcIlRocm90dGxpbmdFeGNlcHRpb25cIixcbiAgXCJUb29NYW55UmVxdWVzdHNFeGNlcHRpb25cIixcbiAgXCJUcmFuc2FjdGlvbkluUHJvZ3Jlc3NFeGNlcHRpb25cIiwgLy8gRHluYW1vREJcbl07XG5cbi8qKlxuICogRXJyb3IgY29kZXMgdGhhdCBpbmRpY2F0ZSB0cmFuc2llbnQgaXNzdWVzXG4gKi9cbmV4cG9ydCBjb25zdCBUUkFOU0lFTlRfRVJST1JfQ09ERVMgPSBbXCJBYm9ydEVycm9yXCIsIFwiVGltZW91dEVycm9yXCIsIFwiUmVxdWVzdFRpbWVvdXRcIiwgXCJSZXF1ZXN0VGltZW91dEV4Y2VwdGlvblwiXTtcblxuLyoqXG4gKiBFcnJvciBjb2RlcyB0aGF0IGluZGljYXRlIHRyYW5zaWVudCBpc3N1ZXNcbiAqL1xuZXhwb3J0IGNvbnN0IFRSQU5TSUVOVF9FUlJPUl9TVEFUVVNfQ09ERVMgPSBbNTAwLCA1MDIsIDUwMywgNTA0XTtcbiJdfQ==