{"version":3,"sources":["redux/Actions.ts","components/heroEditor/HeroEditor.tsx","components/heroMenu/HeroMenu.tsx","components/HeroRow/HeroRow.tsx","components/herosTable/HerosTable.tsx","components/sample/Comp1.tsx","axiosConfig.ts","components/sample/Comp2.tsx","App.tsx","reportWebVitals.ts","redux/Store.ts","index.tsx","redux/Reducers.ts"],"names":["HeroAction","HeroEditor","props","current_hero","useSelector","state","selected","editHeroState","currentHero","heros","dispatch","useDispatch","handler","input","target","name","value","Form","onSubmit","event","hero","preventDefault","type","EDIT_HERO","payload","Label","htmlFor","Input","onChange","id","HeroMenu","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","ADD_HERO","HeroRow","select","power","weakness","archNemesis","secretIdentity","HerosTable","selection","Table","map","index","num","SELECT_HERO","Comp1","pokeman","setPokeman","useEffect","fetch","then","p","json","res","console","log","forms","axios","create","baseURL","Comp2","get","data","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","edit","w","window","store","createStore","action","newState","push","length","slice","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","hey","document","getElementById"],"mappings":"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","file":"static/js/main.78b4025a.chunk.js","sourcesContent":["import { Hero } from \"../models/Hero\";\r\n\r\n\r\nexport enum HeroAction {\r\n    ADD_HERO = 'Add Hero',\r\n    REMOVE_HERO = 'Remove Hero',\r\n    EDIT_HERO = 'Edit Hero',\r\n    DELETE_HERO = 'Delete Hero',\r\n    SELECT_HERO = 'Select Hero'\r\n}\r\n\r\nexport interface IHeroActions {\r\n    type: HeroAction,\r\n    payload: {hero:Hero}\r\n}\r\n\r\nexport interface IAppActions extends IHeroActions {\r\n    type: HeroAction;\r\n    payload: {\r\n        hero:Hero,\r\n        selection: number\r\n    }\r\n}\r\n\r\n","import React, { ChangeEvent, FormEvent, useState } from \"react\";\r\nimport { Form, Input, Label } from \"reactstrap\";\r\nimport { Hero } from \"../../models/Hero\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IAppState } from \"../../redux/Store\";\r\nimport { HeroAction } from \"../../redux/Actions\";\r\ninterface IProps {\r\n//   setHero: (hero: Hero) => void;\r\n//   currentHero: Hero;\r\n//   close: () => void;\r\n}\r\n\r\n// This component should edit a heros information\r\nexport const HeroEditor: React.FC<IProps> = (props: IProps) => {\r\n  // const [hero, setCurrentHero] = useState(props.currentHero);\r\n\r\n  let current_hero = useSelector((state: IAppState) => {\r\n    const selected = state.editHeroState.currentHero;\r\n    return state.heros[selected];\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const setCurrentHero = (hero: Hero) => {\r\n    dispatch({\r\n        type: HeroAction.EDIT_HERO,\r\n        payload: {\r\n            hero,\r\n        }\r\n    })\r\n  }\r\n\r\n  const submit = (event: FormEvent) => {\r\n    event.preventDefault();\r\n    setCurrentHero(current_hero);\r\n  };\r\n\r\n  const handler = (input: ChangeEvent<HTMLInputElement>) => {\r\n    current_hero = { ...current_hero, [input.target.name]: input.target.value }\r\n  };\r\n  return (\r\n    <div>\r\n      <Form onSubmit={submit}>\r\n        <Label htmlFor=\"name\">Hero Name</Label>\r\n        <Input onChange={handler} type=\"text\" name=\"name\" id=\"heroName\" />\r\n        <Label htmlFor=\"power\">Hero Super Power</Label>\r\n        <Input\r\n          onChange={handler}\r\n          type=\"text\"\r\n          name=\"power\"\r\n          id=\"heroSuperPower\"\r\n        />\r\n        <Label htmlFor=\"archNemesis\">Hero Arch Nemesis</Label>\r\n        <Input\r\n          onChange={handler}\r\n          type=\"text\"\r\n          name=\"archNemesis\"\r\n          id=\"heroArchNemesis\"\r\n        />\r\n        <Label htmlFor=\"weakness\">Hero Weakness</Label>\r\n        <Input\r\n          onChange={handler}\r\n          type=\"text\"\r\n          name=\"weakness\"\r\n          id=\"heroWeakness\"\r\n        />\r\n        <Label htmlFor=\"secretIdentity\">Hero Secret Identity</Label>\r\n        <Input\r\n          onChange={handler}\r\n          type=\"text\"\r\n          name=\"secretIdentity\"\r\n          id=\"heroSecretIdentity\"\r\n        />\r\n        <Input onChange={handler} type=\"submit\" value=\"submit\" />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    Collapse, Nav,\r\n    Navbar,\r\n    NavbarBrand, NavbarToggler,\r\n    NavItem,\r\n    NavLink\r\n} from \"reactstrap\";\r\nimport './heroMenu.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { HeroAction } from \"../../redux/Actions\";\r\nimport { IAppState } from \"../../redux/Store\";\r\n\r\n\r\ninterface IProps {\r\n  // editor: () => void;\r\n  // buttonText: string;\r\n  // addClick: () => void;\r\n}\r\n\r\nexport const HeroMenu: React.FC<IProps> = (props: IProps) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const addClick = () => {\r\n    dispatch({\r\n      type: HeroAction.ADD_HERO,\r\n      payload: {\r\n      }\r\n    })\r\n  }\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">Hero</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"#\">Table</NavLink>\r\n            </NavItem>\r\n            <NavItem navbar className=\"mr-auto\">\r\n              <NavLink href=\"/#\">Additions</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <Nav navbar className=\"ms-auto\">\r\n            <NavItem navbar id=\"editNavButton\" className=\"ms-auto\">\r\n              <NavLink onClick={addClick}>Add Hero</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Hero } from '../../models/Hero';\r\n\r\ninterface IProps {\r\n    hero: Hero;\r\n    select: () => void;\r\n}\r\nexport const HeroRow: React.FC<IProps> = (props: IProps) => {\r\n    return (\r\n        <tr onClick={props.select}>\r\n        <td id=\"heroName\">{props.hero.name}</td>\r\n        <td id='heroPower'>{props.hero.power}</td>\r\n        <td id=\"heroWeakness\">{props.hero.weakness}</td>\r\n        <td id=\"heroArchNemesis\">{props.hero.archNemesis}</td>\r\n        <td id=\"heroSecretIdentity\">{props.hero.secretIdentity}</td>\r\n    </tr>\r\n    )\r\n}","import React from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport { Hero } from '../../models/Hero';\r\nimport { HeroRow } from '../HeroRow/HeroRow';\r\nimport './HerosTable.css';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { IAppState } from '../../redux/Store';\r\nimport { HeroAction } from '../../redux/Actions';\r\ninterface IProps {\r\n    // heros: Hero[];\r\n    // setCurrentHero: (num:number) => void;\r\n}\r\n\r\n// This component should show all the heros in table form\r\nexport const HerosTable: React.FC<IProps> = (props: IProps) => {\r\n\r\n    // Will use a callback function to return a portion of the state to your variable\r\n    const heros = useSelector((state:IAppState) => state.heros);\r\n    // Dispatch will send whatever action you define to the store's registered reducers\r\n    const selection = useDispatch();\r\n\r\n    // Here we create a function to use the dispatcher\r\n    const dispatchSelection = (num: number) => {\r\n        selection({\r\n            type: HeroAction.SELECT_HERO,\r\n            payload: {\r\n                selection: num\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <Table>\r\n            <thead>\r\n                <tr>\r\n                    <th>name</th>\r\n                    <th>power</th>\r\n                    <th>weakness</th>\r\n                    <th>archNemesis</th>\r\n                    <th>secretIdentity</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {/* React needs a key to keep track of any \r\n                duplicated information such as in lists \r\n                or tables */}\r\n                {heros.map((hero, index) => (<HeroRow select={() => dispatchSelection(index)} hero = {hero} key = {index}/>))}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nexport const Comp1: React.FC<any> = (props:any) => {\r\n\r\n    const [pokeman, setPokeman] = useState<any>(null)\r\n\r\n    useEffect(() => {\r\n        fetch('https://pokeapi.co/api/v2/pokemon/pikachu').then(p => p.json()).then(p => {\r\n            const res = p;\r\n            console.log(res);\r\n            setPokeman(res);\r\n    })\r\n    },[])\r\n    return (\r\n        <div>\r\n            <p id=\"pokeP\">{pokeman && pokeman.forms[0].name}</p>\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL:'https://pokeapi.co/api/v2/pokemon'\r\n})\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from '../../axiosConfig'\r\nexport const Comp2: React.FC<any> = (props: any) => {\r\n    const [pokeman, setPokeman] = useState<any>(null)\r\n\r\n    useEffect(() => {\r\n        // fetch('https://pokeapi.co/api/v2/pokemon/pikachu').then(p => p.json()).then(p => {\r\n        axios.get('/charizard').then(p => {\r\n            const res = p.data;\r\n            console.log(res);\r\n            setPokeman(res);\r\n    })\r\n    },[])\r\n    return (\r\n        <div>\r\n            <p id=\"pokeP\">{pokeman && pokeman.forms[0].name}</p>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\nimport { HeroEditor } from \"./components/heroEditor/HeroEditor\";\nimport { HeroMenu } from \"./components/heroMenu/HeroMenu\";\nimport { HerosTable } from \"./components/herosTable/HerosTable\";\nimport { IAppState } from \"./redux/Store\";\nimport { useSelector } from \"react-redux\";\nimport {Comp1} from './components/sample/Comp1'\nimport {Comp2} from './components/sample/Comp2'\n\nconst App: React.FC<any> = (props: any) => {\n\n  const currentHero = useSelector((state: IAppState) => state.editHeroState.currentHero)\n  return (\n    <div>\n      <HeroMenu/>\n      <HerosTable />\n      {currentHero > -1 && <HeroEditor />}\n      <Comp1></Comp1>\n      <Comp2></Comp2>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Hero } from \"../models/Hero\";\r\n\r\n\r\nexport interface IEditHeroState {\r\n    currentHero: number;\r\n    edit: boolean;\r\n}\r\n\r\nexport interface IAppState {\r\n    editHeroState: IEditHeroState;\r\n    heros: Hero[];\r\n}\r\n\r\nexport const initialState: IAppState = {\r\n    editHeroState: {\r\n        currentHero: -1,\r\n        edit: false\r\n    },\r\n    heros: [\r\n        {\r\n          name: \"superman\",\r\n          archNemesis: \"Lex Luthor\",\r\n          power: \"like everything\",\r\n          secretIdentity: \"clark kent\",\r\n          weakness: \"kryptonite, and sometimes donuts\",\r\n        },\r\n        {\r\n          name: \"Deadpool\",\r\n          archNemesis: \"Wolverine, but love Hughey\",\r\n          power: \"unnecessary regeneration\",\r\n          secretIdentity: \"Ryan reynolds aka wade wilson\",\r\n          weakness: \"off switches, damsels in distress, and also donuts\",\r\n        },\r\n      ]\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore, Store } from 'redux';\nimport { reducers } from './redux/Reducers';\nimport { IAppState } from './redux/Store';\nimport { IAppActions } from './redux/Actions';\n\nconst w:any = window;\nconst store: Store<IAppState, IAppActions> = createStore(reducers, w.__REDUX_DEVTOOLS_EXTENSION__ && w.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <Provider store={store}>\n    <App hey=\"something\" />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { HeroAction, IAppActions } from \"./Actions\";\r\nimport { IAppState, initialState } from \"./Store\";\r\n\r\n\r\nexport const reducers = (state: IAppState = initialState, action: IAppActions): IAppState => {\r\n    const newState = {...state};\r\n    switch(action.type){\r\n        case HeroAction.ADD_HERO:\r\n            newState.heros.push({archNemesis:'',power:'',name:'',secretIdentity:'',weakness:''});\r\n            newState.editHeroState.currentHero= newState.heros.length-1;\r\n            newState.editHeroState.edit=true;\r\n            return newState;\r\n        case HeroAction.SELECT_HERO:\r\n            newState.editHeroState.currentHero = action.payload.selection;\r\n            newState.editHeroState.edit=true;\r\n            return newState;\r\n        case HeroAction.EDIT_HERO:\r\n            newState.heros = [\r\n                ...newState.heros.slice(0, newState.editHeroState.currentHero),\r\n                action.payload.hero,\r\n                ...newState.heros.slice(newState.editHeroState.currentHero + 1, newState.heros.length),\r\n              ];\r\n              newState.editHeroState.currentHero=-1;\r\n              newState.editHeroState.edit=false;\r\n              return newState;\r\n        default:\r\n            return newState;\r\n    }\r\n\r\n}"],"sourceRoot":""}